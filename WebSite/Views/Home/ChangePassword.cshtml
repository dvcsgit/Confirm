@model Models.Authenticated.PasswordFormModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>

    <script type="text/javascript">
        function Save() {
            var form = $('#PasswordForm');

            if (form.valid())
            {
                $.ajax({
                    type: "POST",
                    cache: false,
                    url: '@Url.Action("ChangePassword")',
                    data: form.serialize(),
                    dataType: "json",
                    beforeSend: function () {
                        $.Overlay('show');
                    },
                    success: function (data) {
                        $.Overlay('hide');
                        if (data.IsSuccess) {
                            $.SuccessDialog(data.Message);
                        }
                        else {
                            $.ErrorDialog(data.Message);
                        }
                    },
                    error: function (x, h, r) {
                        $.Overlay('hide');
                        $.ErrorDialog(x.responseText);
                    }
                });
            }
        }
    </script>
}

<p>
    <button class="btn btn-app btn-danger btn-xs" onclick="Save();">
        <i class="ace-icon fa fa-key bigger-160"></i>
        @Resources.Resource.Save
    </button>
</p>

<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">@Resources.Resource.ChangePassword</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding">
            @using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post, new { ID = "PasswordForm" }))
            {
                <table class="table table-bordered table-input">
                    <tr>
                        <th class="col-sm-1">@Html.LabelFor(x => x.Opassword)</th>
                        <td class="col-sm-11">
                            @Html.PasswordFor(x => x.Opassword, new { @class = "col-sm-2" })
                            <br />
                            @Html.ValidationMessageFor(x => x.Opassword)
                        </td>
                    </tr>
                    <tr>
                        <th class="col-sm-1">@Html.LabelFor(x => x.Npassword)</th>
                        <td class="col-sm-11">
                            @Html.PasswordFor(x => x.Npassword, new { @class = "col-sm-2" })
                            <br />
                            @Html.ValidationMessageFor(x => x.Npassword)
                        </td>
                    </tr>
                    <tr>
                        <th class="col-sm-1">@Html.LabelFor(x => x.Cpassword)</th>
                        <td class="col-sm-11">
                            @Html.PasswordFor(x => x.Cpassword, new { @class = "col-sm-2" })
                            <br />
                            @Html.ValidationMessageFor(x => x.Cpassword)
                        </td>
                    </tr>
                </table>
            }
        </div>
    </div>
</div>


