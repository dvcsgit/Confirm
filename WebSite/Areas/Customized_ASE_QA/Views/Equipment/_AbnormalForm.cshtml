@model Models.ASE.QA.AbnormalForm.DetailViewModel



@if (!string.IsNullOrEmpty(Model.HandlingRemark))
{
    <div class="widget-box widget-color-dark">
        <div class="widget-header">
            <h5 class="widget-title">微調處置說明</h5>
        </div>

        <div class="widget-body">
            <div class="widget-main no-padding">
                <table class="table table-bordered table-input">
                    <tr>
                        <td class="col-sm-12">@Html.DisplayFor(x => x.HandlingRemark)</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
}
    

@if (!string.IsNullOrEmpty(Model.FlowVHNO))
    {
<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">MEASURMENT EQUIPMENT CALIBRATION OUT OF TOLERANCE PE SHOULD FOLLOW NON-CONFORMING FLOW HANDLE</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding">
            <table class="table table-bordered table-input">
                <tr>
                    <th><label>e-MRB單號</label></th>
                    <td>@Html.DisplayFor(x => x.FlowVHNO)</td>
                    <th><label>e-MRB結案日期</label></th>
                    <td>@Html.DisplayFor(x => x.FlowClosedDateString)</td>
                </tr>
            </table>
        </div>
    </div>
</div>
    }

<div class="space"></div>

<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">@Resources.Resource.CalibrationAbnormalForm</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding">
            <table class="table table-bordered table-input">
                <tr>
                    <th>@Html.LabelFor(x => x.VHNO)</th>
                    <td>@Html.DisplayFor(x => x.VHNO)</td>
                    <th>@Html.LabelFor(x => x.StatusDescription)</th>
                    <td>
                        @if (Model.Status == "1")
                        {
                            <span class="label label-lg label-danger arrowed-right">@Model.StatusDescription</span>
                        }
                        else if (Model.Status == "2")
                        {
                            <span class="label label-lg label-primary arrowed-right">@Model.StatusDescription</span>
                        }
                        else if (Model.Status == "3" || Model.Status == "5" || Model.Status == "6")
                        {
                            <span class="label label-lg label-warning arrowed-right">@Model.StatusDescription</span>
                        }
                        else if (Model.Status == "4")
                        {
                            <span class="label label-lg label-success arrowed-right">@Model.StatusDescription</span>
                        }
                        else
                        {
                            <span>@Model.StatusDescription</span>
                        }
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.CalibrateDateString)</th>
                    <td class="col-sm-5">@Html.DisplayFor(x => x.CalibrateDateString)</td>
                    <th class="col-sm-1">@Html.LabelFor(x => x.Calibrator)</th>
                    <td class="col-sm-5">@Html.DisplayFor(x => x.Calibrator)</td>
                </tr>
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.CreateTimeString)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.CreateTimeString)</td>
                </tr>
                <tr>
                    <th><label>其他資訊</label></th>
                    <td colspan="3">@Html.DisplayFor(x => x.OtherInformation)</td>
                </tr>
            </table>
        </div>
    </div>
</div>

<div class="space"></div>

@Html.Partial("_Equipment", Model.Equipment)

@if (Model.STDUSEList != null && Model.STDUSEList.Count > 0)
{
    <div class="space"></div>

    <div class="widget-box widget-color-dark">
        <div class="widget-header">
            <h5 class="widget-title">標準件</h5>
        </div>

        <div class="widget-body">
            <div class="widget-main no-padding" style="overflow-x:scroll; min-height:150px;">
                <table class="table table-striped table-bordered table-hover nowrap">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th>儀校編號</th>
                            <th>校驗人員</th>
                            <th>上次校驗日期</th>
                            <th>下次校驗日期</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.STDUSEList)
                        {
                            <tr>
                                <td>@item.CalNo</td>
                                <td>@item.Calibrator</td>
                                <td>@item.LastCalibrateDateString</td>
                                <td>@item.NextCalibrateDateString</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@if (Model.ItemList != null && Model.ItemList.Count > 0)
{
    <div class="space"></div>

    <div class="widget-box widget-color-dark">
        <div class="widget-header">
            <h5 class="widget-title">@Resources.Resource.Calibration @Resources.Resource.Information</h5>
        </div>

        <div class="widget-body">
            <div class="widget-main no-padding" style="overflow-x:scroll; min-height:150px;">
                <table class="table table-striped table-bordered table-hover nowrap">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th>@Resources.Resource.Characteristic</th>
                            <th>@Resources.Resource.UsingRange</th>
                            <th>校驗點</th>
                            <th>標準值</th>
                            <th>量測值</th>
                            <th>@Resources.Resource.Tolerance</th>
                            <th class="center">@Resources.Resource.CalibrateDate</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItemList)
                        {
                            <tr>
                                <td>@item.Characteristic</td>
                                <td>@item.UsingRange</td>
                                <td>@item.CalibrationPoint</td>
                                <td>@item.Standard</td>
                                <td>@item.ReadingValue</td>
                                <td>@item.Tolerance</td>
                                <td class="center">@item.CalibrateDateString</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@if (Model.FileList != null && Model.FileList.Count > 0)
{
    <div class="space"></div>
    
    <div class="widget-box widget-color-dark">
        <div class="widget-header">
            <h5 class="widget-title">@Resources.Resource.File</h5>
        </div>

        <div class="widget-body">
            <div class="widget-main no-padding" style="overflow-x:scroll; min-height:150px;">
                <table class="table table-striped table-bordered table-hover nowrap">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th></th>
                            <th>@Resources.Resource.FileName</th>
                            <th>@Resources.Resource.FileSize</th>
                            <th>@Resources.Resource.FileTime</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.FileList)
                        {
                            <tr>
                                <td class="center">
                                    <div class="action-buttons">
                                        <a class="purple" href="@Url.Action("Download", "AbnormalForm", new { FormUniqueID=Model.UniqueID, Seq=item.Seq})" title="@Resources.Resource.Download">
                                            <i class="ace-icon fa fa-cloud-download bigger-130"></i>
                                        </a>
                                    </div>
                                </td>
                                <td>@item.Display</td>
                                <td>@item.FileSize</td>
                                <td>@item.LastModifyTimeString</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>  
}

@if (Model.ChangeForm != null)
{
    <div class="space"></div>

    <div class="widget-box widget-color-dark">
        <div class="widget-header">
            <h5 class="widget-title">@Resources.Resource.CalibrationChangeForm</h5>
        </div>

        <div class="widget-body">
            <div class="widget-main no-padding">
                <table class="table table-bordered table-input">
                    <tr>
                        <th class="col-sm-1">@Html.LabelFor(x => x.ChangeForm.VHNO)</th>
                        <td class="col-sm-5">@Html.DisplayFor(x => x.ChangeForm.VHNO)</td>
                        <th class="col-sm-1">@Html.LabelFor(x => x.ChangeForm.StatusDescription)</th>
                        <td class="col-sm-5">
                            @if (Model.ChangeForm.Status == "1")
                            {
                                <span class="label label-lg label-purple arrowed-right">@Model.ChangeForm.StatusDescription</span>
                            }
                            else if (Model.ChangeForm.Status == "2")
                            {
                                <span class="label label-lg label-danger arrowed-right">@Model.ChangeForm.StatusDescription</span>
                            }
                            else if (Model.ChangeForm.Status == "3" || Model.ChangeForm.Status == "5" || Model.ChangeForm.Status == "6")
                            {
                                <span class="label label-lg label-success arrowed-right">@Model.ChangeForm.StatusDescription</span>
                            }
                            else
                            { 
                                <span>@Model.ChangeForm.StatusDescription</span>
                            }
                        </td>
                    </tr>
                    <tr>
                        <th class="col-sm-1">@Html.LabelFor(x => x.ChangeForm.ChangeTypeDescription)</th>
                        <td class="col-sm-5">@Html.DisplayFor(x => x.ChangeForm.ChangeTypeDescription)</td>
                        <th class="col-sm-1">@Html.LabelFor(x => x.ChangeForm.CreateTimeString)</th>
                        <td class="col-sm-5">@Html.DisplayFor(x => x.ChangeForm.CreateTimeString)</td>
                    </tr>
                    @if (Model.ChangeForm.ChangeType == "4")
                    { 
                        <tr>
                            <th>@Html.LabelFor(x => x.ChangeForm.FixFinishedDateString)</th>
                            <td colspan="3">@Html.DisplayFor(x => x.ChangeForm.FixFinishedDateString)</td>
                        </tr>
                    }
                    @if (Model.ChangeForm.ChangeType == "5")
                    { 
                        <tr>
                            <th>@Html.LabelFor(x=>x.ChangeForm.Owner)</th>
                            <td>@Html.DisplayFor(x => x.ChangeForm.Owner)</td>
                            <th>@Html.LabelFor(x => x.ChangeForm.PE)</th>
                            <td>@Html.DisplayFor(x => x.ChangeForm.PE)</td>
                        </tr>
    <tr>
        <th>@Html.LabelFor(x => x.ChangeForm.OwnerManager)</th>
        <td>@Html.DisplayFor(x => x.ChangeForm.OwnerManager)</td>
        <th>@Html.LabelFor(x => x.ChangeForm.PEManager)</th>
        <td>@Html.DisplayFor(x => x.ChangeForm.PEManager)</td>
    </tr>
                    }
                    <tr>
                        <th>@Html.LabelFor(x => x.ChangeForm.ChangeReason)</th>
                        <td colspan="3">@Html.DisplayFor(x => x.ChangeForm.ChangeReason)</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
}

@if (Model.LogList != null && Model.LogList.Count > 0)
{
    <div class="space"></div>

    <div class="widget-box widget-color-dark">
        <div class="widget-header">
            <h5 class="widget-title">簽核流程</h5>
        </div>

        <div class="widget-body">
            <div class="widget-main no-padding" style="overflow-x:scroll; min-height:150px;">
                <table class="table table-striped table-bordered table-hover nowrap">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th>@Resources.Resource.Role</th>
                            <th>@Resources.Resource.VerifyUser</th>
                            <th>@Resources.Resource.NotifyTime</th>
                            <th>@Resources.Resource.VerifyTime</th>
                            <th>@Resources.Resource.VerifyResult</th>
                            <th>@Resources.Resource.VerifyComment</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.LogList)
                        {
                            <tr>
                                <td>@item.Role</td>
                                <td>@item.User</td>
                                <td>@item.NotifyTimeString</td>
                                <td>@item.VerifyTimeString</td>
                                <td>@item.VerifyResultDescription</td>
                                <td>@item.VerifyComment</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
