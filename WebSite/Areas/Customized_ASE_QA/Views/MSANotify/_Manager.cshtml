@model Models.ASE.QA.MSANotify.ManagerFormModel

<script type="text/javascript">
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#ManagerForm");

        $('.Reject').hide();

        $('#FormInput_Comment').hide();

        $('#CommentList').change(function () {
            var val = $(this).val();

            $('#FormInput_Comment').val('').hide();

            if (val != '')
            {
                if (val == '@Utility.Define.OTHER')
                {
                    $('#FormInput_Comment').show();
                }
                else
                {
                    $('#FormInput_Comment').val(val);
                }
            }
        });
    });

    var Approve = function (seq) {
        $.ajax({
            type: "POST",
            cache: false,
            url: '@Url.Action("Approve")',
            data: $('#ManagerForm').serialize(),
            dataType: "json",
            beforeSend: function () { $.Overlay('show'); },
            success: function (data) {
                $.Overlay('hide');

                if (data.IsSuccess) {
                    Query();
                    $.SuccessDialog(data.Message);
                }
                else {
                    $.ErrorDialog(data.Message);
                }
            },
            error: function (x, h, r) {
                $.Overlay('hide');
                $.ErrorDialog(x.responseText);
            }
        });
    };

    var Reject = function (seq) {
        var comment = $('#FormInput_Comment').val();

        if (comment == '') {
            $.InfoDialog('@Resources.Resource.VerifyCommentRequired');
        }
        else {
            $.ajax({
                type: "POST",
                cache: false,
                url: '@Url.Action("Reject")',
                data: $('#ManagerForm').serialize(),
                dataType: "json",
                beforeSend: function () { $.Overlay('show'); },
                success: function (data) {
                    $.Overlay('hide');

                    if (data.IsSuccess) {
                        Query();
                        $.SuccessDialog(data.Message);
                    }
                    else {
                        $.ErrorDialog(data.Message);
                    }
                },
                error: function (x, h, r) {
                    $.Overlay('hide');
                    $.ErrorDialog(x.responseText);
                }
            });
        }
    };
    
    var RejectForm = function () {
        $('.Initial').hide();
        $('.Reject').show();
    };

    var CancelReject = function () {
        $('.Initial').show();
        $('.Reject').hide();
    };
</script>

<p>
    <button class="btn btn-app btn-primary btn-xs Initial" onclick="Approve();" type="button">
        <i class="ace-icon fa fa-check-circle-o bigger-160"></i>
        @Resources.Resource.Approve
    </button>

    <button class="btn btn-app btn-danger btn-xs Initial" onclick="RejectForm();" type="button">
        <i class="ace-icon fa fa-times-circle-o bigger-160"></i>
        @Resources.Resource.Reject
    </button>

    <button class="btn btn-app btn-success btn-xs Initial" onclick="Query();" type="button">
        <i class="ace-icon fa fa-ban bigger-160"></i>
        返回
    </button>

    <button class="btn btn-app btn-danger btn-xs Reject" onclick="Reject();" type="button">
        <i class="ace-icon fa fa-times-circle-o bigger-160"></i>
        @Resources.Resource.Reject
    </button>

    <button class="btn btn-app btn-success btn-xs Reject" onclick="CancelReject();" type="button">
        <i class="ace-icon fa fa-ban bigger-160"></i>
        @Resources.Resource.Cancel
    </button>
</p>

@using (Html.BeginForm("Manager", null, FormMethod.Post, new { @ID = "ManagerForm" }))
{
    @Html.HiddenFor(x => x.UniqueID)

    <div class="Reject">
        <div class="widget-box widget-color-dark">
            <div class="widget-header">
                <h5 class="widget-title">@Resources.Resource.VerifyComment</h5>
            </div>

            <div class="widget-body">
                <div class="widget-main no-padding">
                    <table class="table table-bordered table-input">
                        <tr>
                            <th class="col-sm-1">@Html.LabelFor(x => x.FormInput.Comment)</th>
                            <td colspan="3" class="col-sm-11">
                                <select id="CommentList">
                                    <option value="">= @Resources.Resource.SelectOne =</option>
                                    @foreach (var comment in Model.VerifyCommentList)
                                    {
                                        <option value="@comment.Description">@comment.Description</option>
                                    }
                                    <option value="@Utility.Define.OTHER">@Resources.Resource.Other</option>
                                </select>
                                @Html.TextBoxFor(x => x.FormInput.Comment, new { @class = "col-sm-5" })
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        <div class="space"></div>

    </div>
}

<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">MSA通知單</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding">
            <table class="table table-bordered table-input">
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.VHNO)</th>
                    <td>@Html.DisplayFor(x => x.FormViewModel.VHNO)</td>
                    <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.Status.Display)</th>
                    <td class="col-sm-5">
                        @if (Model.FormViewModel.Status.Status == "1")
                        {
                            <span class="label label-lg label-purple arrowed-right">@Model.FormViewModel.Status.Display</span>
                        }
                        else if (Model.FormViewModel.Status.Status == "0" || Model.FormViewModel.Status.Status == "2")
                        {
                            <span class="label label-lg label-danger arrowed-right">@Model.FormViewModel.Status.Display</span>
                        }
                        else if (Model.FormViewModel.Status.Status == "3")
                        {
                            <span class="label label-lg label-success arrowed-right">@Model.FormViewModel.Status.Display</span>
                        }
                        else
                        {
                            <span>@Model.FormViewModel.Status.Display</span>
                        }
                    </td>
                </tr>
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.CreateTimeString)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.FormViewModel.CreateTimeString)</td>
                </tr>
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.CharacteristicType)</th>
                    <td class="col-sm-5">@Html.DisplayFor(x => x.FormViewModel.CharacteristicType)</td>
                    <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.Cycle)</th>
                    <td class="col-sm-5">@Html.DisplayFor(x => x.FormViewModel.Cycle)</td>
                </tr>
            </table>
        </div>
    </div>
</div>

<div class="space"></div>

@Html.Partial("_Equipment", Model.FormViewModel.Equipment)

<div class="space"></div>

<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">@Resources.Resource.MSA @Resources.Resource.Information</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding">
            <table class="table table-bordered table-input">
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.MSATypeDisplay)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.FormViewModel.MSATypeDisplay)</td>
                </tr>
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.MSAStationDisplay)</th>
                    <td class="col-sm-5">@Html.DisplayFor(x => x.FormViewModel.MSAStationDisplay)</td>
                    <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.MSAIchiDisplay)</th>
                    <td class="col-sm-5">@Html.DisplayFor(x => x.FormViewModel.MSAIchiDisplay)</td>
                </tr>
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.MSACharacteristicDisplay)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.FormViewModel.MSACharacteristicDisplay)</td>
                </tr>
                @if (Model.FormViewModel.EstMSADate.HasValue)
                {
                    <tr>
                        <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.MSAResponsor)</th>
                        <td class="col-sm-5">@Html.DisplayFor(x => x.FormViewModel.MSAResponsor)</td>
                        <th class="col-sm-1">@Html.LabelFor(x => x.FormViewModel.EstMSADateString)</th>
                        <td class="col-sm-5">@Html.DisplayFor(x => x.FormViewModel.EstMSADateString)</td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>



@if (Model.FormViewModel.LogList != null && Model.FormViewModel.LogList.Count > 0)
{
    <div class="space"></div>

    <div class="widget-box widget-color-dark">
        <div class="widget-header">
            <h5 class="widget-title">簽核流程</h5>
        </div>

        <div class="widget-body">
            <div class="widget-main no-padding" style="overflow-x:scroll; min-height:150px;">
                <table class="table table-striped table-bordered table-hover nowrap">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th>@Resources.Resource.Role</th>
                            <th>@Resources.Resource.VerifyUser</th>
                            <th>@Resources.Resource.NotifyTime</th>
                            <th>@Resources.Resource.VerifyTime</th>
                            <th>@Resources.Resource.VerifyResult</th>
                            <th>@Resources.Resource.VerifyComment</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.FormViewModel.LogList)
                        {
                            <tr>
                                <td>@item.Role</td>
                                <td>@item.User</td>
                                <td>@item.NotifyTimeString</td>
                                <td>@item.VerifyTimeString</td>
                                <td>@item.VerifyResultDescription</td>
                                <td>@item.VerifyComment</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
