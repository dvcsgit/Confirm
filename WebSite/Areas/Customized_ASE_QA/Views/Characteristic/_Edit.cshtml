@model Models.ASE.QA.CharacteristicManagement.EditFormModel

<script type="text/javascript">
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#EditForm");

        var maxWidth = 0;

        $('.Unit').each(function () {
            var width = $(this).parent()[0].clientWidth;
            if (width > maxWidth) {
                maxWidth = width;
            }

            if ($(this).data('checked')=='Y') {
                $(this).prop('checked', true);
            }
        });

        $('.Unit').each(function () {
            $(this).parent().css('width', maxWidth);
        });

        $('#Type').change(function () {
            var val = $(this).val();

            if (val == '') {
                $('#FormInput_Type').val('').prop('readonly', true);
            }
            else if (val == '@Utility.Define.NEW') {
                $('#FormInput_Type').val('').prop('readonly', false);
            }
            else {
                $('#FormInput_Type').val(val).prop('readonly', true);
            }
        });
    });

    function Save() {
        var form = $('#EditForm');

        if (form.valid()) {
            if ($('#FormInput_Type').val() == '') {
                $.InfoDialog('請選擇或新增量性');
            }
            else {
                var unit = [];

                $('.Unit:checked').each(function () {
                    unit.push($(this).val());
                });

                $('#FormInput_Units').val(JSON.stringify(unit));

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: '@Url.Action("Edit")',
                    data: form.serialize(),
                    dataType: "json",
                    beforeSend: function () { $.Overlay('show'); },
                    success: function (data) {
                        $.Overlay('hide');

                        if (data.IsSuccess) {
                            Query();
                            $.SuccessDialog(data.Message);
                        }
                        else {
                            $.ErrorDialog(data.Message);
                        }
                    },
                    error: function (x, h, r) {
                        $.Overlay('hide');
                        $.ErrorDialog(x.responseText);
                    }
                });
            }   
        }
    }
</script>

<p>
    <button class="btn btn-app btn-primary btn-xs" onclick="Save();" type="button">
        <i class="ace-icon fa fa-save bigger-160"></i>
        @Resources.Resource.Save
    </button>

    <button class="btn btn-app btn-success btn-xs" onclick="Detail('@Model.UniqueID');" type="button">
        <i class="ace-icon fa fa-ban bigger-160"></i>
        @Resources.Resource.Cancel
    </button>
</p>

<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="bigger lighter">@Resources.Resource.Edit 量測特性</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding">
            @using (Html.BeginForm("Edit", null, FormMethod.Post, new { @ID = "EditForm" }))
            {
                @Html.HiddenFor(x => x.UniqueID)
                @Html.HiddenFor(x => x.FormInput.Units)

    <table class="table table-bordered table-input">
        <tr>
            <th class="col-sm-1">@Html.LabelFor(x => x.FormInput.Type)</th>
            <td class="col-sm-5">@Html.DropDownList("Type", Model.TypeSelectItemList)</td>
            <th class="col-sm-1">@Html.LabelFor(x => x.FormInput.Type)</th>
            <td class="col-sm-5">
                @Html.TextBoxFor(x => x.FormInput.Type, new { @class = "col-sm-11", @readonly = "readonly" })
                <br />
                @Html.ValidationMessageFor(x => x.FormInput.Type)
            </td>
        </tr>
        <tr>
            <th class="col-sm-1">@Html.LabelFor(x => x.FormInput.Description)</th>
            <td colspan="3">
                @Html.TextBoxFor(x => x.FormInput.Description, new { @class = "col-sm-6" })
                <br />
                @Html.ValidationMessageFor(x => x.FormInput.Description)
            </td>
        </tr>
        <tr>
            <th><label>單位</label></th>
            <td colspan="3">
                @foreach (var unit in Model.UnitList)
                {
                    <label>
                        <input class="ace ace-checkbox-2 Unit" type="checkbox" value="@unit.UniqueID" data-checked="@(Model.CharacteristicUnitList.Any(x => x == unit.UniqueID) ? "Y" : "N")">
                        <span class="lbl"> @unit.Description</span>
                    </label>
                }
            </td>
        </tr>
    </table>
            }
        </div>
    </div>
</div>



