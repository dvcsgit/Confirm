@model Models.PipelinePatrol.CheckPointManagement.DetailViewModel

<p>
    @if (Model.Permission == Utility.Define.EnumOrganizationPermission.Editable)
    { 
        if (ViewBag.CanEdit)
        {
            <button class="btn btn-app btn-primary btn-xs" onclick="Edit('@Model.UniqueID');" type="button">
                <i class="ace-icon fa fa-pencil bigger-160"></i>
                @Resources.Resource.Edit
            </button>
        }
    }
    
    <button class="btn btn-app btn-success btn-xs" onclick="Query();" type="button">
        <i class="ace-icon fa fa-ban bigger-160"></i>
        @Resources.Resource.Cancel
    </button>
</p>

<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">@Resources.Resource.CheckPoint</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding">
            <table class="table table-bordered table-input">
                <tr>
                    <th>@Html.LabelFor(x => x.ParentOrganizationFullDescription)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.ParentOrganizationFullDescription)</td>
                </tr>
                <tr>
                    <th>@Html.LabelFor(x => x.PipePointType)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.PipePointType)</td>
                </tr>
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.ID)</th>
                    <td class="col-sm-5">@Html.DisplayFor(x => x.ID)</td>
                    <th class="col-sm-1">@Html.LabelFor(x => x.Name)</th>
                    <td class="col-sm-5">@Html.DisplayFor(x => x.Name)</td>
                </tr>
                <tr>
                    <th>@Html.LabelFor(x => x.IsFeelItemDefaultNormal)</th>
                    <td colspan="3">
                        @if (Model.IsFeelItemDefaultNormal)
                        {
                            <i class="ace-icon fa fa-check bigger-110 red"></i>
                        }
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<div class="space"></div>

<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">@Resources.Resource.CheckPoint @Resources.Resource.CheckItem</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding">
            <table class="table table-striped table-bordered table-hover">
                <thead class="thin-border-bottom">
                    <tr>
                        <th class="col-sm-1 center">@Resources.Resource.Inherit</th>
                        <th>@Resources.Resource.CheckType</th>
                        <th>@Resources.Resource.CheckItemID</th>
                        <th>@Resources.Resource.CheckItemDescription</th>
                        <th>@Resources.Resource.LowerLimit</th>
                        <th>@Resources.Resource.LowerAlertLimit</th>
                        <th>@Resources.Resource.UpperAlertLimit</th>
                        <th>@Resources.Resource.UpperLimit</th>
                        <th>@Resources.Resource.AccumulationBase</th>
                        <th>@Resources.Resource.Unit</th>
                        <th>@Resources.Resource.Remark</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.CheckItemList)
                    {
                        <tr>
                            <td class="center">
                                @if (item.IsInherit)
                                {
                                    <i class="ace-icon fa fa-check bigger-110 red"></i>
                                }
                            </td>
                            <td>@item.CheckType</td>
                            <td>@item.ID</td>
                            <td>@item.Description</td>
                            @if (item.IsFeelItem)
                            {
                                <td colspan="7">@Resources.Resource.IsFeelItem</td>
                            }
                            else
                            {
                                <td>@(item.IsInherit ? item.OriLowerLimit : item.LowerLimit)</td>
                                <td>@(item.IsInherit ? item.OriLowerAlertLimit : item.LowerAlertLimit)</td>
                                <td>@(item.IsInherit ? item.OriUpperAlertLimit : item.UpperAlertLimit)</td>
                                <td>@(item.IsInherit ? item.OriUpperLimit : item.UpperLimit)</td>
                                <td>@(item.IsInherit ? item.OriAccumulationBase : item.AccumulationBase)</td>
                                <td>@(item.IsInherit ? item.OriUnit : item.Unit)</td>
                                <td>@(item.IsInherit ? item.OriRemark : item.Remark)</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>