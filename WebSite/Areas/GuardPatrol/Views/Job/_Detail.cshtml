@model Models.GuardPatrol.JobManagement.DetailViewModel

@foreach (var route in Model.RouteList)
{
    <script type="text/javascript">
        $(document).ready(function () {
            var container = $('#divTreeContainer' + '@route.UniqueID');

            $.ajax({
                type: "POST",
                cache: false,
                url: '@Url.Action("InitDetailTree")',
                data: { JobUniqueID: '@Model.UniqueID', RouteUniqueID:'@route.UniqueID' },
                dataType: "html",
                beforeSend: function () { container.Overlay('show'); },
                success: function (data) { container.Overlay('hide').html(data); },
                error: function (x, h, r) { container.Overlay('hide').html(x.responseText); }
            });
        });
    </script>
}

<p>
    @if (Model.Permission == Utility.Define.EnumOrganizationPermission.Editable)
    {
        <button class="btn btn-app btn-primary btn-xs" onclick="Edit('@Model.UniqueID')" type="button">
            <i class="ace-icon fa fa-pencil bigger-160"></i>
            @Resources.Resource.Edit
        </button>

        <button class="btn btn-app btn-danger btn-xs" onclick="Delete('@Model.UniqueID');" type="button">
            <i class="ace-icon fa fa-trash-o bigger-160"></i>
            @Resources.Resource.Delete
        </button>

        <button class="btn btn-app btn-primary btn-xs" onclick="Copy('@Model.UniqueID')">
            <i class="ace-icon fa fa-copy bigger-160"></i>
            @Resources.Resource.Copy
        </button>
    }
    
    <button class="btn btn-app btn-success btn-xs" onclick="Query();" type="button">
        <i class="ace-icon fa fa-ban bigger-160"></i>
        @Resources.Resource.Cancel
    </button>

</p>

<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">@Resources.Resource.Job</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding">
            <table class="table table-bordered table-input">
                <tr>
                    <th>@Html.LabelFor(x => x.ParentOrganizationFullDescription)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.ParentOrganizationFullDescription)</td>
                </tr>
                <tr>
                    <th>@Html.LabelFor(x => x.Description)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.Description)</td>
                </tr>
                <tr>
                    <th class="col-sm-1">@Html.LabelFor(x => x.IsNeedVerify)</th>
                    <td class="col-sm-5">
                        @if (Model.IsNeedVerify)
                        {
                            <i class="ace-icon fa fa-check bigger-110 red"></i>
                        }
                    </td>
                    <th class="col-sm-1">@Html.LabelFor(x => x.IsCheckBySeq)</th>
                    <td class="col-sm-5">
                        @if (Model.IsCheckBySeq)
                        {
                            <i class="ace-icon fa fa-check bigger-110 red"></i>
                        }
                    </td>
                </tr>
                <tr>
                    <th>@Resources.Resource.CycleMode</th>
                    <td>
                        <label>@Resources.Resource.Every</label>
                        @Html.DisplayFor(x => x.CycleCount)
                        @if (Model.CycleMode == "D")
                        { 
                            <label>@Resources.Resource.Day</label>
                        }
                        @if (Model.CycleMode == "W")
                        {
                            <label>@Resources.Resource.Week</label>
                        }
                        @if (Model.CycleMode == "M")
                        {
                            <label>@Resources.Resource.Month</label>
                        }
                        @if (Model.CycleMode == "Y")
                        {
                            <label>@Resources.Resource.Year</label>
                        }
                    </td>
                    <th>@Html.LabelFor(x => x.IsShowPrevRecord)</th>
                    <td>
                        @if (Model.IsShowPrevRecord)
                        {
                            <i class="ace-icon fa fa-check bigger-110 red"></i>
                        }
                    </td>
                </tr>
                <tr>
                    <th>@Html.LabelFor(x => x.BeginDateString)</th>
                    <td>@Html.DisplayFor(x => x.BeginDateString)</td>
                    <th>@Html.LabelFor(x => x.EndDateString)</th>
                    <td>@Html.DisplayFor(x => x.EndDateString)</td>
                </tr>
                <tr>
                    <th>@Html.LabelFor(x => x.TimeMode)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.TimeMode)</td>
                </tr>
                <tr>
                    <th>@Html.LabelFor(x => x.BeginTime)</th>
                    <td>@Html.DisplayFor(x => x.BeginTime)</td>
                    <th>@Html.LabelFor(x => x.EndTime)</th>
                    <td>@Html.DisplayFor(x => x.EndTime)</td>
                </tr>
                <tr>
                    <th>@Html.LabelFor(x => x.Remark)</th>
                    <td colspan="3">@Html.DisplayFor(x => x.Remark)</td>
                </tr>
            </table>
        </div>
    </div>
</div>

<div class="space"></div>

<div class="widget-box widget-color-dark">
    <div class="widget-header">
        <h5 class="widget-title">@Resources.Resource.JobUser</h5>
    </div>

    <div class="widget-body">
        <div class="widget-main no-padding" style="overflow:scroll; max-height:200px;">
            <table class="table table-striped table-bordered table-hover nowrap">
                <thead class="thin-border-bottom">
                    <tr>
                        <th>@Resources.Resource.Organization</th>
                        <th>@Resources.Resource.UserID</th>
                        <th>@Resources.Resource.UserName</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.UserList)
                    {
                        <tr>
                            <td>@user.OrganizationDescription</td>
                            <td>@user.ID</td>
                            <td>@user.Name</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@foreach (var route in Model.RouteList)
{
    <div class="space"></div>

    <div class="widget-box widget-color-dark">
        <div class="widget-header">
            <h5 class="widget-title">@string.Format("{0}/{1}", route.ID, route.Name)</h5>
        </div>

        <div class="widget-body">
            <div class="widget-main padding-4">
                <div id="@string.Format("divTreeContainer{0}", route.UniqueID)" style="min-height:200px;"></div>
            </div>
        </div>
    </div>
}

